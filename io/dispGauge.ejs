<!--
  Copyright 2015, 2015 MakerCollider .

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<!DOCTYPE HTML>
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
	<title>Display Gauge</title>
  </head>
	
  <body>

  <div class='atlasHide'>
  <script src="./scripts/jquery.min.js"></script>
  <script src="./scripts/jquery.blockUI.js"></script>
  <link href="./scripts/bootstrap/css/bootstrap.min.css" rel="stylesheet">
  <script src="./scripts/bootstrap/js/bootstrap.min.js"></script>
  <script src="./scripts/bootbox.min.js"></script>
  <script src="./scripts/socket.io.js"></script>
  <script src="./scripts/atlas.js"></script>
  </div>

<script src="./scripts/highchart/highcharts.js"></script>
<script src="./scripts/highchart/highcharts-more.js"></script>
<script src="./scripts/highchart/modules/solid-gauge.js"></script>

<script type="text/javascript">

var cmdStr = function () {
  // This function is anonymous, is executed immediately and 
  // the return value is assigned to QueryString!
  var query_string = {};
  var query = window.location.search.substring(1);
  var vars = query.split("&");
  for (var i=0;i<vars.length;i++) {
    var pair = vars[i].split("=");
        // If first entry with this name
    if (typeof query_string[pair[0]] === "undefined") {
      query_string[pair[0]] = pair[1];
        // If second entry with this name
    } else if (typeof query_string[pair[0]] === "string") {
      var arr = [ query_string[pair[0]], pair[1] ];
      query_string[pair[0]] = arr;
        // If third or later entry with this name
    } else {
      query_string[pair[0]].push(pair[1]);
    }
  } 
    return query_string;
} ();

//==> ejs begins

console.log('cmd str ' + JSON.stringify(cmdStr));

var config = <%- JSON.stringify(config) %>;

<% for (idx in config) { %> 
if(typeof cmdStr['<%=idx%>'] != 'undefined')
  config['<%=idx%>'] = cmdStr['<%=idx%>'];
<% }%>

//==> ejs ends

$(function () {

    var gaugeOptions = {

        chart: {
            type: 'solidgauge'
        },

        title: null,

        pane: {
            center: ['50%', '85%'],
            size: '140%',
            startAngle: -90,
            endAngle: 90,
            background: {
                backgroundColor: (Highcharts.theme && Highcharts.theme.background2) || '#EEE',
                innerRadius: '60%',
                outerRadius: '100%',
                shape: 'arc'
            }
        },

        tooltip: {
            enabled: false
        },

        // the value axis
        yAxis: {
            stops: [
                [0.1, '#55BF3B'], // green
                [0.5, '#DDDF0D'], // yellow
                [0.9, '#DF5353'] // red
            ],
            lineWidth: 0,
            minorTickInterval: null,
            tickPixelInterval: 400,
            tickWidth: 0,
            title: {
                y: -70
            },
            labels: {
                y: 16
            }
        },

        plotOptions: {
            solidgauge: {
                dataLabels: {
                    y: 5,
                    borderWidth: 0,
                    useHTML: true
                }
            }
        }
    };

    // The speed gauge
    $('#container-speed').highcharts(Highcharts.merge(gaugeOptions, {
        yAxis: {
            min: config.min,
            max: config.max,
            title: {
                text: config.name
            }
        },

        credits: {
            enabled: false
        },

        series: [{
            name: config.name,
            data: [0],
            dataLabels: {
                format: '<div style="text-align:center"><span style="font-size:25px;color:' +
                    ((Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black') + '">{y}</span><br/>' +
                       '<span style="font-size:12px;color:silver">' + config.unit + ' </span></div>'
            },
            tooltip: {
                valueSuffix: config.unit
            }
        }]

    }));

});


atlas.on(config['name'], function(data) {
  console.log('recv ' + data);
  var chart = $('#container-speed').highcharts(),
    point,
    newVal,
    inc;  
  if(chart) {
    point = chart.series[0].points[0];
    point.update(parseInt(data));
  } else {
    console.log('chart has not been initialized');
  }
})

</script>

<div style="width: 600px; height: 400px; margin: 0 auto">
	<div id="container-speed" style="width: 300px; height: 200px; float: left"></div>
	<div id="container-rpm" style="width: 300px; height: 200px; float: left"></div>
</div>


	</body>
</html>
